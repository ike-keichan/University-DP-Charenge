(defun multiplication (row-number line-number max-number)
    (cond ((not (integerp row-number)) nil)
        ((<= line-number 0) nil)
        ((> line-number max-number) nil)
        (t (progn
            (princ #\space)
            (princ (format nil "~3D" (* row-number line-number)))
            (multiplication row-number (+ line-number 1) max-number)
        ))
    )
)

(defun multiplications (row-number max-number)
    (cond ((not (integerp row-number)) nil)
        ((<= row-number 0) nil)
        ((> row-number max-number) nil)
        (t (progn
            (princ (format nil "~3D" row-number))
            (multiplication row-number 1 max-number)
            (princ #\newline)
            (multiplications (+ row-number 1) max-number)
        ))
    )
)

(defparameter max-number (read))
(princ " ï¼¼")
(multiplication 1 1 max-number)
(princ #\newline)
(multiplications 1 max-number)

